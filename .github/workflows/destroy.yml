name: Terraform Destroy and Provision EC2 with Workspaces

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to destroy'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.0"

      # Set the AWS region based on the selected environment
      - name: Set AWS region
        id: set-region
        run: |
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "AWS_REGION=${{ secrets.AWS_REGION_PRODUCTION }}" >> $GITHUB_ENV
          else
            echo "AWS_REGION=${{ secrets.AWS_REGION_STAGING }}" >> $GITHUB_ENV
          fi

      # Configure AWS credentials from GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Set Terraform Workspace based on user input
      - name: Set Terraform Workspace
        run: |
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            terraform workspace select production || terraform workspace new production
          else
            terraform workspace select staging || terraform workspace new staging
          fi

      # Terraform Destroy
      - name: Terraform Destroy
        run: terraform destroy -var-file="${{ github.event.inputs.environment }}.tfvars" -auto-approve

      # Output the confirmation of destruction
      - name: Output Destroy Confirmation
        run: echo "Terraform resources have been destroyed for the ${{ github.event.inputs.environment }} environment."
