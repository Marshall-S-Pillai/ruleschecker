name: Terraform Apply and Provision EC2 with Workspaces

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.0"

      # Configure AWS credentials from GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ github.event.inputs.environment == 'production' && secrets.AWS_REGION_PRODUCTION || secrets.AWS_REGION_STAGING }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Set Terraform Workspace based on user input
      - name: Set Terraform Workspace
        run: |
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            terraform workspace select production || terraform workspace new production
          else
            terraform workspace select staging || terraform workspace new staging
          fi

      # Apply Terraform plan
      - name: Terraform Apply
        run: terraform apply -var-file="envs/${{ github.event.inputs.environment }}.tfvars" -auto-approve

      # Output the public IP of the EC2 instance
      - name: Output EC2 IP
        run: |
          instance_ip=$(terraform output -raw ec2_public_ip)
          echo "EC2 Public IP: $instance_ip"
